# Forcefully delete all containers with: docker container rm -f $(docker container ls -aq)
# Compose all containers with: docker-compose up -d

version: "3.7"

services:
  blabber-api:
    image: dinardov/blabber:latest
    command: npm run dev
    working_dir: /blabber
    volumes: 
      - ./:/blabber
    labels:
      - "traefik.backend=blabber-api"
      - "traefik.frontend.rule=Host:localhost"
      # - "traefik.frontend.rule=Path: /api/blabs(.*)"
      # - "traefik.frontend.rule=ReplacePathRegex: ^/api/blabs(?:/(.*))?$$ /blabs/$${1}"
      # - "traefik.frontend.rule=Path: /api{reg:(.*)}"
      - "traefik.frontend.rule=PathPrefixStrip: /api/"
      # - "traefik.port=3000"
    links:
      - mongo
  reverse-proxy:
    image: traefik # The official Traefik docker image
    command: --api --docker # Enables the web UI and tells Traefik to listen to docker
    ports:
      - "80:80"     # The HTTP port
      - "8080:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
    labels:
      - "traefik.backend=reverse-proxy"

  client-ui:
    image: vtcs2304s19/blabber-client
    labels:
      - "traefik.backend=client-ui"
      - "traefik.frontend.rule=Host:localhost"
      # - "traefik.frontend.rule=Path: /"
      # - "traefik.port=80"

  mongo:
    image: mongo
    ports: 
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  tests:
    image: vtcs2304s19/blabber-api-tests
    environment:
      SERVICE_NAME: blabber-api
      API_PORT: "3000" 
    depends_on:
      - blabber-api

volumes:
  mongo-data:
    