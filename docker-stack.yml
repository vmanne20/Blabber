# For visualization: docker-app deploy mikesir87/swarm-viz.dockerapp
# Note: you need traefik.port for traefik to see the containers

version: "3.7"

services:
  blabber-api:
    image: dinardov/blabber:latest
    command: npm run dev
    # working_dir: /blabber
    volumes: 
      - api-dev:/blabber
    networks:
      - shared-net
    labels:
      - "traefik.backend=blabber-api"
      - "traefik.frontend.rule=Host:localhost"
      - "traefik.frontend.rule=PathPrefixStrip: /api/"
      # - "traefik.port=3000"
    depends_on:
      - mongo
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.backend=blabber-api"
        - "traefik.frontend.rule=PathPrefixStrip: /api/"
        - "traefik.port=3000"

  reverse-proxy:
    image: traefik # The official Traefik docker image
    # Enables the web UI and tells Traefik to listen to docker
    command: --web --docker --docker.swarmMode --docker.domain=traefik --docker.watch 
    ports:
      - "80:80"     # The HTTP port
      - "8080:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
    networks:
      - shared-net
    labels:
      - "traefik.backend=reverse-proxy"
    deploy:
      placement:
        constraints: [node.role == manager]

  client-ui:
    image: vtcs2304s19/blabber-client
    networks:
      - shared-net
    labels:
      - "traefik.backend=client-ui"
      # - "traefik.frontend.rule=Host:localhost"
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == worker]
      labels:
        - "traefik.backend=client-ui"
        - "traefik.frontend.rule=PathPrefixStrip: /"
        - "traefik.port=80"

  mongo:
    image: mongo
    command: [--auth]
    secrets:
      - mongo-user
      - mongo-password
    volumes:
      - mongo-data:/data/db
    networks:
      - shared-net
    deploy:
      placement:
        constraints: [node.role == worker]

  # stack-visualizer:
  #   image: mikesir87/swarm-viz
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - shared-net
  #   deploy:
  #     placement:
  #       constraints: [node.role == worker]

  # tests:
  #   image: vtcs2304s19/blabber-api-tests
  #   environment:
  #     SERVICE_NAME: blabber-api
  #     API_PORT: "3000" 
  #   depends_on:
  #     - blabber-api

secrets:
  mongo-user:
    file: ./secrets/mongo-root-u
  mongo-password:
    file: ./secrets/mongo-root-p

volumes:
  mongo-data:
  api-dev:

networks:
  shared-net:

# docker run -it --rm --network root_shared-net mongo \
#   mongo --host root_mongo_1 \
#     -u mongoadmin \
#     -p secret \
#     --authenticationDatabase admin \
#     some-db

# docker run -it --rm --network root_shared-net mongo \
#   mongo --host root_mongo_1 \
#     -u user \
#     -p password \
#     --authenticationDatabase admin \
#     some-db